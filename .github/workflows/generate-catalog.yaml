# MIT License
# Copyright (c) 2021 Eli Lilly and Company
# Author: William Michael Landau (will.landau at gmail)
# Written with help from public domain (CC0 1.0 Universal) workflow files by Jim Hester:
# * https://github.com/r-lib/actions/blob/master/examples/check-full.yaml
# * https://github.com/r-lib/actions/blob/master/examples/blogdown.yaml
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

on:
  # ---------------------------------------------------------------------------
  # push:
  #   branches:
  #     - main
  #   paths:
  #     # Ensure workflow is only triggered on push
  #     # if the following paths are modified.
  #     - '_targets.R'
  #     - 'DESCRIPTION'
  #     - 'R/**.R'
  #     - 'data-raw/*'
  # ---------------------------------------------------------------------------

  # Only run on a schedule, uncomment above for push-based runs
  schedule:
    # Run this workflow at 00:00 UTC on the 1st of each month
    - cron: '0 0 1 * *'

  workflow_dispatch:
    

name: Generate climateR Catalog

# Used for committing to `release` branch.
permissions:
  contents: write

jobs:
  generate-catalog:
    name: Generate Catalog
    runs-on: macos-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Remove due to an issue with key signing, causes failure
      # when running `apt-get update`. Needed for use with `act`
      # - name: Remove hhvm PPA
      #   run: grep -v "hhvm" /etc/apt/sources.list > tmpfile && mv tmpfile /etc/apt/sources.list

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.1'
          use-public-rspm: true
          http-user-agent: "R/4.3.1/climateR-catalogs"

      - name: Install Linux system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libzmq3-dev libomp-dev
          sudo apt-get install -y libudunits2-dev libgdal-dev libgeos-dev libproj-dev
          sudo apt-get install -y -V ca-certificates lsb-release wget
          wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt-get install -y -V ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt-get update -y
          sudo apt-get install -y -V \
            libarrow-dev libarrow-glib-dev \
            libarrow-dataset-dev libarrow-dataset-glib-dev \
            libparquet-dev libparquet-glib-dev
          sudo apt-get install -f -y
            
      - name: Install macOS system dependencies
        if: runner.os == 'macOS'
        run: |
          brew install --force --overwrite python zeromq gdal geos proj udunits apache-arrow

      - name: Setup R enviroment
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: local::.

      - name: Setup EarthData Auth
        shell: Rscript {0}
        env:
          CATALOGS_NETRC_LOGIN: ${{ secrets.CATALOGS_NETRC_LOGIN }}
          CATALOGS_NETRC_PASSWORD: ${{ secrets.CATALOGS_NETRC_PASSWORD }}
        run: |
          if (Sys.getenv("CATALOGS_NETRC_LOGIN") == "" || Sys.getenv("CATALOGS_NETRC_PASSWORD") == "") {
              stop("NASA EarthData Credentials not found!")
          }

          climateR::writeNetrc(login = Sys.getenv("CATALOGS_NETRC_LOGIN"), password = Sys.getenv("CATALOGS_NETRC_PASSWORD"), overwrite = TRUE)
          climateR::writeDodsrc()

      - name: Run targets pipeline
        run: targets::tar_make()
        shell: Rscript {0}

      - name: Upload catalog artifact
        uses: actions/upload-artifact@v4
        with:
          name: catalog-artifact
          if-no-files-found: error
          retention-days: 1
          path: |
            private/catalog.*
            private/errors.json

      - name: Prepare failure artifact
        if: failure()
        shell: Rscript {0}
        run: |
          unlink(".git", recursive = TRUE)
          unlink(".github", recursive = TRUE)
          
          if (requireNamespace('climateR', quietly = TRUE)) {
              unlink(climateR::getNetrcPath())
              unlink(climateR::getDodsrcPath())
              unlink(".urs_cookies")
          }

          if (requireNamespace('jsonlite', quietly = TRUE)) {
              cat(jsonlite::toJSON(targets::tar_meta()))
          } else {
              cat('{"error": "failed before R dependencies installed."}')
          }

      - name: Post failure artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-r-${{ github.run_id }}-failure-results
          retention-days: 5
          path: .

    upload-catalog:
      name: Upload Catalog Release
      runs-on: ubuntu-latest
      needs: generate-catalog
      steps:
        - name: Download Catalog Artifact
          uses: actions/download-artifact@v4
          id: catalog_artifact
          with:
            name: catalog-artifact
            path: ${{ runner.temp }}/catalogs
          
        - name: Get current release
          id: date
          run: echo "CURRENT_RELEASE=$(date +'%B-%Y')" >> "$GITHUB_OUTPUT"

        - name: Create catalog release
          uses: softprops/action-gh-release@v1
          with:
            name: climateR Catalogs ${{ steps.date.outputs.CURRENT_RELEASE }} Release
            tag_name: ${{ steps.date.outputs.CURRENT_RELEASE }}
            files: |
              ${{ steps.catalog_artifact.outputs.download_path }}/catalog.*
              ${{ steps.catalog_artifact.outputs.download_path }}/errors.json

    commit-catalog:
      name: Commit Catalog to Repo
      runs-on: ubuntu-latest
      needs: generate-catalog
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            ref: release

        - name: Download Catalog Artifact
          uses: actions/download-artifact@v4
          id: catalog_artifact
          with:
            name: catalog-artifact

        - name: Get current release
          id: date
          run: echo "CURRENT_RELEASE=$(date +'%B-%Y')" >> "$GITHUB_OUTPUT"

        - name: Push catalog to release branch
          run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "climateR Catalogs ${{ steps.date.outputs.CURRENT_RELEASE }} Release"
            git push -u origin release
